#include "test.h"
#include <sstream>

Entity* guy;
Entity* gal;
Entity* don;
Entity* bkgd;
SpriteAnimation* galAnim = new SpriteAnimation;
SpriteAnimation* waveAnim = new SpriteAnimation;
Player* joey;
float starttime = 0.0f;
int counter = 0;
Test::Test() : Scene()
{
	GetMainCamera()->SetZoom(10);

	char turtlecanvas[]
	{
		0x0,0x0,0x0,0x0,0x0,0x0,
		0x0,0x0,0x0,0xd,0x1,0x0,
		0x0,0xc,0xc,0xd,0xd,0x0,
		0xc,0xc,0xc,0xd,0xc,0x0,
		0xc,0xc,0xd,0xd,0xd,0x0,
		0xd,0x0,0xd,0x0,0xd,0x0,
	};

	char galcanvas[]
	{
		0x0,0x0,0x7,0x7,0x7,0x0,0x0,0x0,
		0x0,0x7,0x0,0x7,0x7,0x7,0x0,0x0,
		0x7,0x0,0x7,0x7,0x7,0x7,0x0,0x0,
		0x7,0x7,0x7,0x7,0x1,0x7,0x0,0x0,
		0x7,0x7,0x7,0x7,0x7,0x7,0x7,0x0,
		0x7,0x0,0x7,0x7,0x7,0x7,0x0,0x0,
		0x7,0x0,0x0,0x7,0x7,0x0,0x0,0x0,
		0x0,0x7,0x7,0x7,0x7,0x7,0x7,0x0,
		0x0,0x6,0x7,0x7,0x7,0x7,0x6,0x0,
		0x0,0x0,0x6,0x7,0x7,0x6,0x0,0x0,
		0x0,0x0,0x7,0x6,0x6,0x7,0x0,0x0,
		0x0,0x7,0x7,0x7,0x7,0x7,0x7,0x0,
		0x0,0x7,0x7,0x7,0x7,0x7,0x7,0x0,
		0x7,0x7,0x7,0x7,0x7,0x7,0x7,0x7,
		0x0,0x0,0x7,0x0,0x0,0x7,0x0,0x0,
		0x0,0x0,0x7,0x7,0x0,0x7,0x7,0x0,
	};
	char waveCanvas[]
	{
		0x0,0x0,0xf,0xf,0xf,0xf,0x0,0x0,
		0x0,0x0,0xf,0xf,0xf,0xf,0x0,0x0,
		0x0,0xf,0xf,0xf,0xf,0xf,0xf,0x0,
		0x0,0x0,0xf,0xf,0x1,0xf,0x0,0xf,
		0x0,0x0,0xf,0xf,0xf,0xf,0xf,0xf,
		0x0,0x0,0xf,0xf,0xf,0xf,0x0,0xf,
		0x0,0x0,0x0,0xf,0xf,0x0,0x0,0xf,
		0x0,0xf,0xf,0xf,0x1,0xf,0xf,0xf,
		0xf,0xf,0xf,0xf,0xf,0xf,0x0,0x0,
		0xf,0x0,0xf,0xf,0x1,0xf,0x0,0x0,
		0xf,0x0,0xf,0xf,0x1,0xf,0x0,0x0,
		0x0,0x0,0xf,0xf,0xf,0xf,0x0,0x0,
		0x0,0x0,0xf,0xf,0xf,0xf,0x0,0x0,
		0x0,0x0,0xf,0xf,0x0,0xf,0x0,0x0,
		0x0,0x0,0xf,0x0,0x0,0xf,0x0,0x0,
		0x0,0x0,0xf,0xf,0x0,0xf,0xf,0x0,
	};
	char waveCanvas2[]
	{
		0x0,0x0,0xf,0xf,0xf,0xf,0x0,0x0,
		0x0,0xf,0xf,0xf,0xf,0xf,0xf,0x0,
		0x0,0x0,0x0,0xf,0xf,0x0,0x0,0xf,
		0x0,0x0,0xf,0xf,0x1,0xf,0x0,0xf,
		0x0,0x0,0xf,0xf,0xf,0xf,0xf,0xf,
		0x0,0x0,0xf,0xf,0xf,0xf,0x0,0xf,
		0x0,0x0,0x0,0xf,0xf,0x0,0x0,0xf,
		0x0,0xf,0xf,0xf,0x1,0xf,0xf,0xf,
		0xf,0xf,0xf,0xf,0xf,0xf,0x0,0x0,
		0xf,0x0,0xf,0xf,0x1,0xf,0x0,0x0,
		0xf,0x0,0xf,0xf,0x1,0xf,0x0,0x0,
		0x0,0x0,0xf,0xf,0xf,0xf,0x0,0x0,
		0x0,0x0,0xf,0xf,0xf,0xf,0x0,0x0,
		0x0,0x0,0xf,0xf,0x0,0xf,0x0,0x0,
		0x0,0x0,0xf,0x0,0x0,0xf,0x0,0x0,
		0x0,0x0,0xf,0xf,0x0,0xf,0xf,0x0,
	};

	char doncanvas[]
	{
		0x0,0x0,0xd,0xd,0xd,0xd,0x0,0x0,
		0x0,0xc,0xc,0xc,0x1,0x1,0x0,0x0,
		0x0,0x0,0xd,0xd,0xc,0xc,0xc,0x0,
		0x0,0x0,0xd,0xd,0x1,0xd,0x0,0x0,
		0x0,0x0,0xd,0xd,0xd,0xd,0xd,0x0,
		0x0,0x0,0xd,0xd,0xd,0xd,0x0,0x0,
		0x0,0x0,0x0,0xd,0xd,0x0,0x0,0x0,
		0x0,0xd,0xc,0xd,0x1,0xd,0xc,0x0,
		0xd,0xd,0xd,0xc,0x1,0xc,0xd,0xd,
		0xd,0xd,0xd,0xd,0xc,0xd,0xd,0xd,
		0xd,0xd,0xd,0xd,0xc,0xd,0xd,0xd,
		0xc,0xc,0xd,0xd,0xd,0xd,0xd,0xc,
		0x0,0xd,0xd,0xd,0xd,0xd,0xd,0x0,
		0x0,0xd,0xd,0xd,0x0,0xd,0xd,0x0,
		0x0,0xd,0xd,0x0,0x0,0xd,0xd,0x0,
		0x0,0xd,0xd,0xd,0x0,0xd,0xd,0xd,
	};
	char doncanvas1[]
	{
		0x0,0x0,0xd,0xd,0xd,0xd,0x0,0x0,
		0x0,0xc,0xc,0xc,0x1,0x1,0x0,0x0,
		0x0,0x0,0xd,0xd,0xc,0xc,0xc,0x0,
		0x0,0x0,0xd,0xd,0xd,0xd,0x0,0x0,
		0x0,0x0,0xd,0xd,0xd,0xd,0xd,0x0,
		0x0,0x0,0xd,0xd,0xd,0xd,0x0,0x0,
		0x0,0x0,0x0,0xd,0xd,0x0,0x0,0x0,
		0x0,0xd,0xc,0xd,0x1,0xd,0xc,0x0,
		0xd,0xd,0xd,0xc,0x1,0xc,0xd,0xd,
		0xd,0xd,0xd,0xd,0xc,0xd,0xd,0xd,
		0xd,0xd,0xd,0xd,0xc,0xd,0xd,0xd,
		0xc,0xc,0xd,0xd,0xd,0xd,0xd,0xc,
		0x0,0xd,0xd,0xd,0xd,0xd,0xd,0x0,
		0x0,0xd,0xd,0xd,0x0,0xd,0xd,0x0,
		0x0,0xd,0xd,0x0,0x0,0xd,0xd,0x0,
		0x0,0xd,0xd,0xd,0x0,0xd,0xd,0xd,
	};
	char bgkdcanvas[]
	{
		0x2
	};
	joey = new Player();
	joey->transform->position->x = 8.0f;
	//walkAnim.AddSprite(canvas, 8, 16,  0.2f);
	//walkAnim.AddSprite(canvas2, 8, 16, 0.2f);
	//walkAnim.AddSprite(canvas3, 8, 16, 0.2f);
	bkgd = new Entity();
	bkgd->AddComponent<Sprite>()->SetSprite(bgkdcanvas, 1, 1);
	bkgd->transform->scale->x = 192.0f;
	bkgd->transform->scale->y = 108.0f;
	this->Addchild(bkgd);

	//waveAnim->AddSprite(waveCanvas, 8, 16, 0.5f);
	//waveAnim->AddSprite(waveCanvas2, 8, 16, 0.5f);

	galAnim->AddSprite(doncanvas, 8, 16, 3.0f);
	galAnim->AddSprite(doncanvas1, 8, 16, 0.1f);
	galAnim->AddSprite(doncanvas, 8, 16, 3.0f);
	galAnim->AddSprite(doncanvas1, 8, 16, 0.1f);

	don = new Entity;
	don->AddComponent<Animation>();
	don->GetComponent<Animation>()->PlayAnimation(galAnim);
	//don->RemoveComponent<Animation>();
	//don->AddComponent<Text>()->SetText("Spaghetti", 5,20,8,0xd);
	don->AddComponent<Collider>()->SetUpSquare(0.0f,0.0f,8,16);
	don->transform->position->x = -8;
	//don->AddComponent<Text>()->printText2D("Mario Mario",2,15, 5.0f, 0xd);

	//galAnim.AddSprite(galcanvas, 8, 16, 0.6f);
	//galAnim.AddSprite(galcanvas2, 8, 16,0.6f);
	//galAnim.AddSprite(galcanvas3, 8, 16,0.6f);
	//galAnim.AddSprite(canvas4, 8, 16,0.6f);
	//galAnim.AddSprite(canvas5, 8, 16,0.6f);
	//this->AddtoScene(joey);
	gal = new Entity;
	gal->AddComponent<Sprite>()->SetSprite(turtlecanvas, 6,6);
	//*gal->transform->scale = Vector3(0.5f,0.5f);
	//gal->AddComponent<Collider>()->SetUpSquare(0.0f, 0.0f, 8, 16);
	//gal->transform->position->x = 8;
	//don->Addchild(gal);
	//gal->Addchild(joey);

	//gal->AddComponent<Text>()->printText2D("Something inspiring.", 0, 0, 10);
	//RemoveTextfromScene();
	//*gal->transform->position = Vector3(0.0f, 0.0f);
	//guy->Addchild(gal);
	//guy->Addchild(don);
	this->Addchild(gal);
	this->Addchild(joey);
	this->Addchild(don);
	AddSceneText("Joey Spectrum", 100.0f, 940.0f, 4.0f, 0xf);
	//SceneText op de Stack of Heap vraag waarom roept hij de decontructor op
}

void Test::update(float deltaTime)
{
	//std::stringstream hello;
	//hello << "Colliding = " << gal->GetComponent<Collider>()->isColliding(don);
	//EditSceneText(hello.str());
	//if (GetInput()->MouseOver(gal))
	//{
	//	std::cout << "You are over me" << std::endl;
	//}

	if (GetInput()->KeyPressed(KeyCode::LeftControl))
	{
		this->DeleteChild(don);
		this->DeleteChild(bkgd);
	}

	//if (don != nullptr)
	//{
	//	if (joey->GetComponent<Collider>()->isColliding(don))
	//	{
	//		//delete galAnim;
	//		don = nullptr;
	//	}
	//}
	if (GetInput()->KeyPressed(KeyCode::Escape))
	{
		this->DeleteChild(don);
		delete waveAnim;
		delete galAnim;
		isRunning = false;
	}
	GetMainCamera()->position.x = joey->transform->position->x;
	GetMainCamera()->position.y = joey->transform->position->y;
}