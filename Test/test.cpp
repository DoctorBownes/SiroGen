#include "test.h"
Entity* guy;
Entity* gal;
float starttime;
int pos = 0;
Test::Test() : Scene()
{
	GetMainCamera()->SetZoom(10);
	char canvas[]
	{
		0x0,0x0,0xe,0xe,0xe,0xe,0x0,0x0,
		0x0,0x0,0xe,0xe,0xe,0xe,0x0,0x0,
		0x0,0xe,0xe,0xe,0xe,0xe,0xe,0x0,
		0x0,0x0,0xe,0xe,0x0,0xe,0x0,0x0,
		0x0,0x0,0xe,0xe,0xe,0xe,0xe,0x0,
		0x0,0x0,0xe,0xe,0xe,0xe,0x0,0x0,
		0x0,0x0,0x0,0xe,0xe,0x0,0x0,0x0,
		0x0,0xe,0xe,0xe,0x0,0xe,0xe,0x0,
		0xe,0xe,0xe,0xe,0xe,0xe,0xe,0xe,
		0xe,0x0,0xe,0xe,0x0,0xe,0x0,0xe,
		0xe,0x0,0xe,0xe,0x0,0xe,0x0,0xe,
		0x0,0x0,0xe,0xe,0xe,0xe,0x0,0x0,
		0x0,0x0,0xe,0xe,0xe,0xe,0x0,0x0,
		0x0,0x0,0xe,0xe,0x0,0xe,0x0,0x0,
		0x0,0x0,0xe,0x0,0x0,0xe,0x0,0x0,
		0x0,0x0,0xe,0xe,0x0,0xe,0xe,0x0,
	};
	char canvas2[]
	{
		0x0,0x0,0xe,0xe,0xe,0xe,0x0,0x0,
		0x0,0x0,0xe,0xe,0xe,0xe,0x0,0x0,
		0x0,0xe,0xe,0xe,0xe,0xe,0xe,0x0,
		0x0,0x0,0xe,0xe,0x0,0xe,0x0,0x0,
		0x0,0x0,0xe,0xe,0xe,0xe,0xe,0x0,
		0x0,0x0,0xe,0xe,0xe,0xe,0x0,0x0,
		0x0,0x0,0x0,0xe,0xe,0x0,0x0,0x0,
		0x0,0xe,0xe,0xe,0x0,0xe,0xe,0x0,
		0xe,0xe,0xe,0xe,0xe,0xe,0xe,0xe,
		0xe,0x0,0xe,0xe,0x0,0xe,0x0,0xe,
		0xe,0x0,0xe,0xe,0x0,0xe,0x0,0x0,
		0x0,0x0,0xe,0xe,0xe,0xe,0x0,0x0,
		0x0,0x0,0xe,0xe,0xe,0xe,0x0,0x0,
		0x0,0x0,0xe,0xe,0x0,0xe,0x0,0x0,
		0x0,0x0,0xe,0x0,0x0,0xe,0x0,0x0,
		0x0,0x0,0xe,0xe,0x0,0xe,0xe,0x0,
	};
	char canvas3[]
	{
		0x0,0x0,0xe,0xe,0xe,0xe,0x0,0x0,
		0x0,0x0,0xe,0xe,0xe,0xe,0x0,0x0,
		0x0,0xe,0xe,0xe,0xe,0xe,0xe,0x0,
		0x0,0x0,0xe,0xe,0x0,0xe,0x0,0x0,
		0x0,0x0,0xe,0xe,0xe,0xe,0xe,0x0,
		0x0,0x0,0xe,0xe,0xe,0xe,0x0,0x0,
		0x0,0x0,0x0,0xe,0xe,0x0,0x0,0x0,
		0x0,0xe,0xe,0xe,0x0,0xe,0xe,0xe,
		0xe,0xe,0xe,0xe,0xe,0xe,0x0,0x0,
		0xe,0x0,0xe,0xe,0x0,0xe,0x0,0x0,
		0xe,0x0,0xe,0xe,0x0,0xe,0x0,0x0,
		0x0,0x0,0xe,0xe,0xe,0xe,0x0,0x0,
		0x0,0x0,0xe,0xe,0xe,0xe,0x0,0x0,
		0x0,0x0,0xe,0xe,0x0,0xe,0x0,0x0,
		0x0,0x0,0xe,0x0,0x0,0xe,0x0,0x0,
		0x0,0x0,0xe,0xe,0x0,0xe,0xe,0x0,
	};
	char canvas4[]
	{
		0x0,0x0,0xe,0xe,0xe,0xe,0x0,0x0,
		0x0,0x0,0xe,0xe,0xe,0xe,0x0,0x0,
		0x0,0xe,0xe,0xe,0xe,0xe,0xe,0x0,
		0x0,0x0,0xe,0xe,0x0,0xe,0x0,0x0,
		0x0,0x0,0xe,0xe,0xe,0xe,0xe,0x0,
		0x0,0x0,0xe,0xe,0xe,0xe,0x0,0xe,
		0x0,0x0,0x0,0xe,0xe,0x0,0x0,0xe,
		0x0,0xe,0xe,0xe,0x0,0xe,0xe,0xe,
		0xe,0xe,0xe,0xe,0xe,0xe,0x0,0x0,
		0xe,0x0,0xe,0xe,0x0,0xe,0x0,0x0,
		0xe,0x0,0xe,0xe,0x0,0xe,0x0,0x0,
		0x0,0x0,0xe,0xe,0xe,0xe,0x0,0x0,
		0x0,0x0,0xe,0xe,0xe,0xe,0x0,0x0,
		0x0,0x0,0xe,0xe,0x0,0xe,0x0,0x0,
		0x0,0x0,0xe,0x0,0x0,0xe,0x0,0x0,
		0x0,0x0,0xe,0xe,0x0,0xe,0xe,0x0,
	};
	char canvas5[]
	{
		0x0,0x0,0xe,0xe,0xe,0xe,0x0,0x0,
		0x0,0x0,0xe,0xe,0xe,0xe,0x0,0x0,
		0x0,0xe,0xe,0xe,0xe,0xe,0xe,0x0,
		0x0,0x0,0xe,0xe,0x0,0xe,0x0,0xe,
		0x0,0x0,0xe,0xe,0xe,0xe,0xe,0xe,
		0x0,0x0,0xe,0xe,0xe,0xe,0x0,0xe,
		0x0,0x0,0x0,0xe,0xe,0x0,0x0,0xe,
		0x0,0xe,0xe,0xe,0x0,0xe,0xe,0xe,
		0xe,0xe,0xe,0xe,0xe,0xe,0x0,0x0,
		0xe,0x0,0xe,0xe,0x0,0xe,0x0,0x0,
		0xe,0x0,0xe,0xe,0x0,0xe,0x0,0x0,
		0x0,0x0,0xe,0xe,0xe,0xe,0x0,0x0,
		0x0,0x0,0xe,0xe,0xe,0xe,0x0,0x0,
		0x0,0x0,0xe,0xe,0x0,0xe,0x0,0x0,
		0x0,0x0,0xe,0x0,0x0,0xe,0x0,0x0,
		0x0,0x0,0xe,0xe,0x0,0xe,0xe,0x0,
	};
	//char canvas2[]
	//{
	//	0x0,0x0,0x6,0x6,0x6,0x0,0x0,0x0,
	//	0x0,0x6,0x0,0x6,0x6,0x6,0x0,0x0,
	//	0x6,0x0,0x6,0x6,0x6,0x6,0x0,0x0,
	//	0x6,0x6,0x6,0x6,0x0,0x6,0x0,0x0,
	//	0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x0,
	//	0x6,0x0,0x6,0x6,0x6,0x6,0x0,0x0,
	//	0x6,0x0,0x0,0x6,0x6,0x0,0x0,0x0,
	//	0x0,0x6,0x6,0x6,0x6,0x6,0x6,0x0,
	//	0x0,0x5,0x6,0x6,0x6,0x6,0x5,0x0,
	//	0x0,0x0,0x5,0x6,0x6,0x5,0x0,0x0,
	//	0x0,0x0,0x6,0x5,0x5,0x6,0x0,0x0,
	//	0x0,0x6,0x6,0x6,0x6,0x6,0x6,0x0,
	//	0x0,0x6,0x6,0x6,0x6,0x6,0x6,0x0,
	//	0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,
	//	0x0,0x0,0x6,0x0,0x0,0x6,0x0,0x0,
	//	0x0,0x0,0x6,0x6,0x0,0x6,0x6,0x0,
	//};

	guy = new Entity;
	guy->AddComponent<PixelSprite>()->AddSprite(canvas, 8, 16);
	guy->GetComponent<PixelSprite>()->AddSprite(canvas2, 8, 16);
	guy->GetComponent<PixelSprite>()->AddSprite(canvas3, 8, 16);
	guy->GetComponent<PixelSprite>()->AddSprite(canvas4, 8, 16);
	guy->GetComponent<PixelSprite>()->AddSprite(canvas5, 8, 16);
	guy->GetComponent<PixelSprite>()->AddSprite(canvas4, 8, 16);
	guy->GetComponent<PixelSprite>()->AddSprite(canvas3, 8, 16);
	guy->GetComponent<PixelSprite>()->AddSprite(canvas2, 8, 16);
	this->Addchild(guy);

	//gal = new Entity;
	//gal->AddComponent<PixelSprite>()->AddSprite(canvas2, 8,16);
	//gal->transform->position = new Vector3(8.0f, 0.0f, 0.0f);
	//std::cout << gal->GetComponent<PixelSprite>()->spritetexture << std::endl;
	//this->Addchild(gal);
	starttime = glfwGetTime();
}

void Test::update(float deltaTime)
{
	std::cout << glfwGetTime() - starttime << std::endl;
	if ((glfwGetTime() - starttime) >= 0.5f)
	{
		guy->GetComponent<PixelSprite>()->frame = guy->GetComponent<PixelSprite>()->sprites.at(pos);
		pos++;
		if (pos > guy->GetComponent<PixelSprite>()->sprites.size() -1)
		{
			pos = 0;
		}
		starttime = glfwGetTime();
	}
}
