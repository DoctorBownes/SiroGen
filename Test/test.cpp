#include "test.h"
#include <sstream>
/*
Entity* joey;
Entity* gal;
Entity* don;
Entity* bkgd;
SpriteAnimation* galAnim = new SpriteAnimation;
SpriteAnimation* donAnim = new SpriteAnimation;
SpriteAnimation* walkAnim = new SpriteAnimation;
SpriteAnimation* waveAnim = new SpriteAnimation;
float starttime = 0.0f;
int counter = 0;*/
Test::Test() : Scene()
{/*
	//GetMainCamera()->SetZoom(10);

	char turtlecanvas[]
	{
		0x0,0x0,0x0,0x0,0x0,0x0,
		0x0,0x0,0x0,0xd,0x1,0x0,
		0x0,0xc,0xc,0xd,0xd,0x0,
		0xc,0xc,0xc,0xd,0xc,0x0,
		0xc,0xc,0xd,0xd,0xd,0x0,
		0xd,0x0,0xd,0x0,0xd,0x0,
	};

	char canvas[]
	{
		0
	};

	char canvas2[]
	{
		0
	};

	char canvas3[]
	{
		0
	};

	char waveCanvas[]
	{
		0
	};

	char galcanvas[]
	{
		0x0,0x0,0x7,0x7,0x7,0x0,0x0,0x0,
		0x0,0x7,0x0,0x7,0x7,0x7,0x0,0x0,
		0x7,0x0,0x7,0x7,0x7,0x7,0x0,0x0,
		0x7,0x7,0x7,0x7,0x1,0x7,0x0,0x0,
		0x7,0x7,0x7,0x7,0x7,0x7,0x7,0x0,
		0x7,0x0,0x7,0x7,0x7,0x7,0x0,0x0,
		0x7,0x0,0x0,0x7,0x7,0x0,0x0,0x0,
		0x0,0x7,0x7,0x7,0x7,0x7,0x7,0x0,
		0x0,0x6,0x7,0x7,0x7,0x7,0x6,0x0,
		0x0,0x0,0x6,0x7,0x7,0x6,0x0,0x0,
		0x0,0x0,0x7,0x6,0x6,0x7,0x0,0x0,
		0x0,0x7,0x7,0x7,0x7,0x7,0x7,0x0,
		0x0,0x7,0x7,0x7,0x7,0x7,0x7,0x0,
		0x7,0x7,0x7,0x7,0x7,0x7,0x7,0x7,
		0x0,0x0,0x7,0x0,0x0,0x7,0x0,0x0,
		0x0,0x0,0x7,0x7,0x0,0x7,0x7,0x0,
	};
	char waveCanvas[]
	{
		0x0,0x0,0xf,0xf,0xf,0xf,0x0,0x0,
		0x0,0x0,0xf,0xf,0xf,0xf,0x0,0x0,
		0x0,0xf,0xf,0xf,0xf,0xf,0xf,0x0,
		0x0,0x0,0xf,0xf,0x1,0xf,0x0,0xf,
		0x0,0x0,0xf,0xf,0xf,0xf,0xf,0xf,
		0x0,0x0,0xf,0xf,0xf,0xf,0x0,0xf,
		0x0,0x0,0x0,0xf,0xf,0x0,0x0,0xf,
		0x0,0xf,0xf,0xf,0x1,0xf,0xf,0xf,
		0xf,0xf,0xf,0xf,0xf,0xf,0x0,0x0,
		0xf,0x0,0xf,0xf,0x1,0xf,0x0,0x0,
		0xf,0x0,0xf,0xf,0x1,0xf,0x0,0x0,
		0x0,0x0,0xf,0xf,0xf,0xf,0x0,0x0,
		0x0,0x0,0xf,0xf,0xf,0xf,0x0,0x0,
		0x0,0x0,0xf,0xf,0x0,0xf,0x0,0x0,
		0x0,0x0,0xf,0x0,0x0,0xf,0x0,0x0,
		0x0,0x0,0xf,0xf,0x0,0xf,0xf,0x0,
	};
	char waveCanvas2[]
	{
		0x0,0x0,0xf,0xf,0xf,0xf,0x0,0x0,
		0x0,0xf,0xf,0xf,0xf,0xf,0xf,0x0,
		0x0,0x0,0x0,0xf,0xf,0x0,0x0,0xf,
		0x0,0x0,0xf,0xf,0x1,0xf,0x0,0xf,
		0x0,0x0,0xf,0xf,0xf,0xf,0xf,0xf,
		0x0,0x0,0xf,0xf,0xf,0xf,0x0,0xf,
		0x0,0x0,0x0,0xf,0xf,0x0,0x0,0xf,
		0x0,0xf,0xf,0xf,0x1,0xf,0xf,0xf,
		0xf,0xf,0xf,0xf,0xf,0xf,0x0,0x0,
		0xf,0x0,0xf,0xf,0x1,0xf,0x0,0x0,
		0xf,0x0,0xf,0xf,0x1,0xf,0x0,0x0,
		0x0,0x0,0xf,0xf,0xf,0xf,0x0,0x0,
		0x0,0x0,0xf,0xf,0xf,0xf,0x0,0x0,
		0x0,0x0,0xf,0xf,0x0,0xf,0x0,0x0,
		0x0,0x0,0xf,0x0,0x0,0xf,0x0,0x0,
		0x0,0x0,0xf,0xf,0x0,0xf,0xf,0x0,
	};

	char doncanvas[]
	{
		0x0,0x0,0xd,0xd,0xd,0xd,0x0,0x0,
		0x0,0xc,0xc,0xc,0x1,0x1,0x0,0x0,
		0x0,0x0,0xd,0xd,0xc,0xc,0xc,0x0,
		0x0,0x0,0xd,0xd,0x1,0xd,0x0,0x0,
		0x0,0x0,0xd,0xd,0xd,0xd,0xd,0x0,
		0x0,0x0,0xd,0xd,0xd,0xd,0x0,0x0,
		0x0,0x0,0x0,0xd,0xd,0x0,0x0,0x0,
		0x0,0xd,0xc,0xd,0x1,0xd,0xc,0x0,
		0xd,0xd,0xd,0xc,0x1,0xc,0xd,0xd,
		0xd,0xd,0xd,0xd,0xc,0xd,0xd,0xd,
		0xd,0xd,0xd,0xd,0xc,0xd,0xd,0xd,
		0xc,0xc,0xd,0xd,0xd,0xd,0xd,0xc,
		0x0,0xd,0xd,0xd,0xd,0xd,0xd,0x0,
		0x0,0xd,0xd,0xd,0x0,0xd,0xd,0x0,
		0x0,0xd,0xd,0x0,0x0,0xd,0xd,0x0,
		0x0,0xd,0xd,0xd,0x0,0xd,0xd,0xd,
	};
	char doncanvas1[]
	{
		0x0,0x0,0xd,0xd,0xd,0xd,0x0,0x0,
		0x0,0xc,0xc,0xc,0x1,0x1,0x0,0x0,
		0x0,0x0,0xd,0xd,0xc,0xc,0xc,0x0,
		0x0,0x0,0xd,0xd,0xd,0xd,0x0,0x0,
		0x0,0x0,0xd,0xd,0xd,0xd,0xd,0x0,
		0x0,0x0,0xd,0xd,0xd,0xd,0x0,0x0,
		0x0,0x0,0x0,0xd,0xd,0x0,0x0,0x0,
		0x0,0xd,0xc,0xd,0x1,0xd,0xc,0x0,
		0xd,0xd,0xd,0xc,0x1,0xc,0xd,0xd,
		0xd,0xd,0xd,0xd,0xc,0xd,0xd,0xd,
		0xd,0xd,0xd,0xd,0xc,0xd,0xd,0xd,
		0xc,0xc,0xd,0xd,0xd,0xd,0xd,0xc,
		0x0,0xd,0xd,0xd,0xd,0xd,0xd,0x0,
		0x0,0xd,0xd,0xd,0x0,0xd,0xd,0x0,
		0x0,0xd,0xd,0x0,0x0,0xd,0xd,0x0,
		0x0,0xd,0xd,0xd,0x0,0xd,0xd,0xd,
	};
	char bgkdcanvas[]
	{
		0x2
	};

	waveAnim->AddSprite(waveCanvas, 8, 16, 0.5f);
	waveAnim->AddSprite(waveCanvas2, 8, 16, 0.5f);

	joey = new Player();
	walkAnim->AddSprite(canvas, 8, 16,  0.2f);
	walkAnim->AddSprite(canvas2, 8, 16, 0.2f);
	walkAnim->AddSprite(canvas3, 8, 16, 0.2f);

	gal = new Entity();
	gal->AddComponent<Sprite>()->SetSprite(galcanvas, 8, 16);
	gal->transform->scale->x = 30.0f;
	gal->transform->scale->y = 30.0f;
	this->Addchild(bkgd);

	donAnim->AddSprite(doncanvas, 8, 16, 3.0f);
	donAnim->AddSprite(doncanvas1, 8, 16, 0.1f);

	don = new Entity;
	don->AddComponent<Animation>();
	don->GetComponent<Animation>()->PlayAnimation(donAnim);
	don->AddComponent<Collider>()->SetUpSquare(0.0f,0.0f,8,16);
	don->transform->position->x = -8;
	don->AddComponent<Text>()->SetText("Mario Mario",2,15, 5.0f, 0xd);
	don->Addchild(gal);
	gal->Addchild(joey);
	this->Addchild(don);
	//AddSceneText("Joey Spectrum", 100.0f, 940.0f, 4.0f, 0xf);*/
}

void Test::update(float deltaTime)
{/*
	std::stringstream hello;
	hello << "Colliding = " << gal->GetComponent<Collider>()->isColliding(don);
	EditSceneText(hello.str());
	//if (GetInput()->MouseOver(gal))
	//{
	//	std::cout << "You are over me" << std::endl;
	//}

	if (GetInput()->KeyPressed(KeyCode::LeftControl))
	{
		this->DeleteChild(don);
		this->DeleteChild(bkgd);
	}

	if (don != nullptr)
	{
		if (joey->GetComponent<Collider>()->isColliding(don))
		{
			//delete galAnim;
			don = nullptr;
		}
	}
	if (GetInput()->KeyPressed(KeyCode::Escape))
	{
		this->DeleteChild(don);
		delete waveAnim;
		delete galAnim;
		isRunning = false;
	}
	GetMainCamera()->position.x = joey->transform->position->x;
	GetMainCamera()->position.y = joey->transform->position->y;*/
}