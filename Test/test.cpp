#include "test.h"
Entity* guy;
Entity* gal;
Entity* don;
SpriteAnimation guyWalk;
SpriteAnimation galAnim;
SpriteAnimation testAnim;
float starttime = 0.0f;
bool test = 0;
Test::Test() : Scene()
{
	GetMainCamera()->SetZoom(10);
	char canvas[]
	{
		0x0,0x0,0xf,0xf,0xf,0xf,0x0,0x0,
		0x0,0x0,0xf,0xf,0xf,0xf,0x0,0x0,
		0x0,0xf,0xf,0xf,0xf,0xf,0xf,0x0,
		0x0,0x0,0xf,0xf,0x1,0xf,0x0,0x0,
		0x0,0x0,0xf,0xf,0xf,0xf,0xf,0x0,
		0x0,0x0,0xf,0xf,0xf,0xf,0x0,0x0,
		0x0,0x0,0x0,0xf,0xf,0x0,0x0,0x0,
		0x0,0xf,0xf,0xf,0x1,0xf,0xf,0x0,
		0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,
		0xf,0x0,0xf,0xf,0x1,0xf,0x0,0xf,
		0xf,0x0,0xf,0xf,0x1,0xf,0x0,0xf,
		0x0,0x0,0xf,0xf,0xf,0xf,0x0,0x0,
		0x0,0x0,0xf,0xf,0xf,0xf,0x0,0x0,
		0x0,0x0,0xf,0xf,0x0,0xf,0x0,0x0,
		0x0,0x0,0xf,0x0,0x0,0xf,0x0,0x0,
		0x0,0x0,0xf,0xf,0x0,0xf,0xf,0x0,
	};
	char canvas2[]
	{
		0x0,0x0,0xf,0xf,0xf,0xf,0x0,0x0,
		0x0,0x0,0xf,0xf,0xf,0xf,0x0,0x0,
		0x0,0xf,0xf,0xf,0xf,0xf,0xf,0x0,
		0x0,0x0,0xf,0xf,0x1,0xf,0x0,0x0,
		0x0,0x0,0xf,0xf,0xf,0xf,0xf,0x0,
		0x0,0x0,0xf,0xf,0xf,0xf,0x0,0x0,
		0x0,0x0,0x0,0xf,0xf,0x0,0x0,0x0,
		0x0,0xf,0xf,0xf,0x1,0xf,0xf,0x0,
		0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,
		0xf,0x0,0xf,0xf,0x1,0xf,0x0,0xf,
		0xf,0x0,0xf,0xf,0x1,0xf,0x0,0xf,
		0x0,0x0,0xf,0xf,0xf,0xf,0x0,0x0,
		0x0,0x0,0xf,0xf,0xf,0xf,0x0,0x0,
		0x0,0x0,0xf,0xf,0x0,0xf,0x0,0x0,
		0x0,0x0,0xf,0x0,0x0,0xf,0xf,0x0,
		0x0,0x0,0xf,0xf,0x0,0x0,0x0,0x0,
	};
	char canvas3[]
	{
		0x0,0x0,0xf,0xf,0xf,0xf,0x0,0x0,
		0x0,0x0,0xf,0xf,0xf,0xf,0x0,0x0,
		0x0,0xf,0xf,0xf,0xf,0xf,0xf,0x0,
		0x0,0x0,0xf,0xf,0x1,0xf,0x0,0x0,
		0x0,0x0,0xf,0xf,0xf,0xf,0xf,0x0,
		0x0,0x0,0xf,0xf,0xf,0xf,0x0,0x0,
		0x0,0x0,0x0,0xf,0xf,0x0,0x0,0x0,
		0x0,0xf,0xf,0xf,0x1,0xf,0xf,0x0,
		0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,
		0xf,0x0,0xf,0xf,0x1,0xf,0x0,0xf,
		0xf,0x0,0xf,0xf,0x1,0xf,0x0,0xf,
		0x0,0x0,0xf,0xf,0xf,0xf,0x0,0x0,
		0x0,0x0,0xf,0xf,0xf,0xf,0x0,0x0,
		0x0,0x0,0xf,0x0,0x0,0xf,0x0,0x0,
		0x0,0x0,0xf,0xf,0x0,0xf,0x0,0x0,
		0x0,0x0,0x0,0x0,0x0,0xf,0xf,0x0,
	};
	char canvas4[]
	{
		0x0,0x0,0xf,0xf,0xf,0xf,0x0,0x0,
		0x0,0x0,0xf,0xf,0xf,0xf,0x0,0x0,
		0x0,0xf,0xf,0xf,0xf,0xf,0xf,0x0,
		0x0,0x0,0xf,0xf,0x1,0xf,0x0,0x0,
		0x0,0x0,0xf,0xf,0xf,0xf,0xf,0x0,
		0x0,0x0,0xf,0xf,0xf,0xf,0x0,0x0,
		0x0,0x0,0x0,0xf,0xf,0x0,0x0,0x0,
		0x0,0xf,0xf,0xf,0x1,0xf,0xf,0x0,
		0xf,0xf,0xf,0xf,0xf,0xf,0xf,0xf,
		0xf,0x0,0xf,0xf,0x1,0xf,0x0,0xf,
		0xf,0x0,0xf,0xf,0x1,0xf,0x0,0xf,
		0x0,0x0,0xf,0xf,0xf,0xf,0x0,0x0,
		0x0,0xf,0xf,0xf,0xf,0xf,0x0,0x0,
		0x0,0xf,0x0,0x0,0xf,0x0,0x0,0x0,
		0x0,0xf,0x0,0x0,0xf,0x0,0x0,0x0,
		0x0,0x0,0x0,0x0,0xf,0xf,0x0,0x0,
	};
	char canvas5[]
	{
		0x0,0x0,0xf,0xf,0xf,0xf,0x0,0x0,
		0x0,0x0,0xf,0xf,0xf,0xf,0x0,0x0,
		0x0,0xf,0xf,0xf,0xf,0xf,0xf,0x0,
		0x0,0x0,0xf,0xf,0x1,0xf,0x0,0xf,
		0x0,0x0,0xf,0xf,0xf,0xf,0xf,0xf,
		0x0,0x0,0xf,0xf,0xf,0xf,0x0,0xf,
		0x0,0x0,0x0,0xf,0xf,0x0,0x0,0xf,
		0x0,0xf,0xf,0xf,0x1,0xf,0xf,0xf,
		0xf,0xf,0xf,0xf,0xf,0xf,0xf,0x0,
		0xf,0x0,0xf,0xf,0x1,0xf,0x0,0x0,
		0xf,0x0,0xf,0xf,0x1,0xf,0x0,0x0,
		0x0,0x0,0xf,0xf,0xf,0xf,0x0,0x0,
		0x0,0x0,0xf,0xf,0xf,0xf,0x0,0x0,
		0x0,0x0,0xf,0xf,0x0,0xf,0x0,0x0,
		0x0,0x0,0xf,0x0,0x0,0xf,0x0,0x0,
		0x0,0x0,0xf,0xf,0x0,0xf,0xf,0x0,
	};
	char galcanvas[]
	{
		0x0,0x0,0x7,0x7,0x7,0x0,0x0,0x0,
		0x0,0x7,0x0,0x7,0x7,0x7,0x0,0x0,
		0x7,0x0,0x7,0x7,0x7,0x7,0x0,0x0,
		0x7,0x7,0x7,0x7,0x1,0x7,0x0,0x0,
		0x7,0x7,0x7,0x7,0x7,0x7,0x7,0x0,
		0x7,0x0,0x7,0x7,0x7,0x7,0x0,0x0,
		0x7,0x0,0x0,0x7,0x7,0x0,0x0,0x0,
		0x0,0x7,0x7,0x7,0x7,0x7,0x7,0x0,
		0x0,0x6,0x7,0x7,0x7,0x7,0x6,0x0,
		0x0,0x0,0x6,0x7,0x7,0x6,0x0,0x0,
		0x0,0x0,0x7,0x6,0x6,0x7,0x0,0x0,
		0x0,0x7,0x7,0x7,0x7,0x7,0x7,0x0,
		0x0,0x7,0x7,0x7,0x7,0x7,0x7,0x0,
		0x7,0x7,0x7,0x7,0x7,0x7,0x7,0x7,
		0x0,0x0,0x7,0x0,0x0,0x7,0x0,0x0,
		0x0,0x0,0x7,0x7,0x0,0x7,0x7,0x0,
	};
	char galcanvas2[]
	{
		0x0,0x0,0x7,0x7,0x7,0x0,0x0,0x0,
		0x0,0x7,0x0,0x7,0x7,0x7,0x0,0x0,
		0x7,0x0,0x7,0x7,0x7,0x7,0x0,0x0,
		0x7,0x7,0x7,0x7,0x1,0x7,0x0,0x0,
		0x7,0x7,0x7,0x7,0x7,0x7,0x7,0x0,
		0x7,0x0,0x7,0x7,0x6,0x6,0x0,0x0,
		0x7,0x0,0x0,0x7,0x7,0x0,0x0,0x0,
		0x0,0x7,0x7,0x7,0x7,0x7,0x7,0x0,
		0x0,0x6,0x7,0x7,0x7,0x7,0x6,0x0,
		0x0,0x0,0x6,0x7,0x7,0x6,0x0,0x0,
		0x0,0x0,0x7,0x6,0x6,0x7,0x0,0x0,
		0x0,0x7,0x7,0x7,0x7,0x7,0x7,0x0,
		0x0,0x7,0x7,0x7,0x7,0x7,0x7,0x0,
		0x7,0x7,0x7,0x7,0x7,0x7,0x7,0x7,
		0x0,0x0,0x7,0x0,0x0,0x7,0x0,0x0,
		0x0,0x0,0x7,0x7,0x0,0x7,0x7,0x0,
	};
	char galcanvas3[]
	{
		0x0,0x0,0x7,0x7,0x7,0x0,0x0,0x0,
		0x0,0x7,0x0,0x7,0x7,0x7,0x0,0x0,
		0x7,0x0,0x7,0x7,0x7,0x7,0x0,0x0,
		0x7,0x7,0x7,0x7,0x1,0x7,0x0,0x0,
		0x7,0x7,0x7,0x6,0x7,0x7,0x7,0x0,
		0x7,0x0,0x7,0x7,0x6,0x6,0x0,0x0,
		0x7,0x0,0x0,0x7,0x7,0x0,0x0,0x0,
		0x0,0x7,0x7,0x7,0x7,0x7,0x7,0x0,
		0x0,0x6,0x7,0x7,0x7,0x7,0x6,0x0,
		0x0,0x0,0x6,0x7,0x7,0x6,0x0,0x0,
		0x0,0x0,0x7,0x6,0x6,0x7,0x0,0x0,
		0x0,0x7,0x7,0x7,0x7,0x7,0x7,0x0,
		0x0,0x7,0x7,0x7,0x7,0x7,0x7,0x0,
		0x7,0x7,0x7,0x7,0x7,0x7,0x7,0x7,
		0x0,0x0,0x7,0x0,0x0,0x7,0x0,0x0,
		0x0,0x0,0x7,0x7,0x0,0x7,0x7,0x0,
	};

	char doncanvas[]
	{
		0x0,0x0,0xd,0xd,0xd,0x0,0x0,0x0,
		0x0,0xc,0xc,0xd,0xd,0xd,0x0,0x0,
		0x0,0x0,0xd,0xc,0xc,0xc,0xc,0x0,
		0x0,0x0,0xd,0xd,0x1,0xd,0x0,0x0,
		0x0,0x0,0xd,0xd,0xd,0xd,0xd,0x0,
		0x0,0x0,0xd,0xd,0xd,0xd,0x0,0x0,
		0x0,0x0,0x0,0xd,0xd,0x0,0x0,0x0,
		0x0,0xd,0xd,0xd,0xc,0xd,0xd,0x0,
		0xd,0xd,0xd,0xd,0xd,0xd,0xd,0xd,
		0xd,0xd,0xd,0xd,0xc,0xd,0xd,0xd,
		0xc,0xc,0xd,0xd,0xc,0xd,0xd,0xc,
		0x0,0xd,0xd,0xd,0xd,0xd,0xd,0x0,
		0x0,0xd,0xd,0xd,0xd,0xd,0xd,0x0,
		0x0,0xd,0xd,0xd,0x0,0xd,0xd,0x0,
		0x0,0xd,0xd,0x0,0x0,0xd,0xd,0x0,
		0x0,0xd,0xd,0xd,0x0,0xd,0xd,0xd,
	};


	guyWalk.AddSprite(canvas2, 8, 16, 0.2f);
	guyWalk.AddSprite(canvas3, 8, 16, 0.2f);
	//guyWalk.AddSprite(canvas4, 8, 16, 0.2f);
	//guyWalk.AddSprite(canvas5, 8, 16, 0.9f);
	//tippinghat.ReUseSprite(2);
	//tippinghat.ReUseSprite(1);
	//tippinghat.ReUseSprite(0);

	guy = new Entity;
	//guy->AddComponent<Sprite>()->AddSprite("assets/rgba.tga");
	guy->AddComponent<Sprite>()->AddSprite(canvas,8,16);
	guy->AddComponent<Animation>();
	guy->transform->position = new Vector3(16.0f, 0.0f, 1.0f);
	//guy->transform->rotation->z = 90.0f;

	don = new Entity;
	don->AddComponent<Sprite>()->AddSprite(doncanvas, 8,16);
	don->transform->position = new Vector3(8.0f, 0.0f, 1.0f);

	galAnim.AddSprite(galcanvas, 8, 16, 0.6f);
	galAnim.AddSprite(galcanvas2, 8, 16,0.6f);
	galAnim.AddSprite(galcanvas3, 8, 16,0.6f);
	gal = new Entity;
	gal->AddComponent<Animation>()->PlayAnimation(&galAnim, true);
	gal->transform->position = new Vector3(16.0f, 0.0f, -1.0f);
	guy->Addchild(gal);
	//guy->Addchild(don);
	this->AddtoScene(don);
	this->AddtoScene(guy);
}

void Test::update(float deltaTime)
{
	if (GetInput()->KeyInput(KeyCode::A, KeyState::Press))
	{
		guy->GetComponent<Animation>()->PlayAnimation(&guyWalk, false);
		guy->transform->rotation->y = -180;
		guy->transform->position->x -= 0.5f;
	}
	else if (GetInput()->KeyInput(KeyCode::D, KeyState::Press))
	{
		guy->GetComponent<Animation>()->PlayAnimation(&guyWalk, false);
		guy->transform->rotation->y = 0;
		guy->transform->position->x += 0.5f;
	}
	else
	{
		guy->GetComponent<Animation>()->RemoveAnimation();
	}
	if (GetInput()->MouseInput(MouseButton::MouseLeft, KeyState::Release))
	{
		std::cout << "You clicked Left!" << std::endl;
	}
	if (GetInput()->MouseInput(MouseButton::MouseRight, KeyState::Release))
	{
		std::cout << "You clicked Right!" << std::endl;
	}
	//if (glfwGetTime() - starttime >= 0.0f && glfwGetTime() - starttime < 1.0f)
	//{
	//}
	//if (glfwGetTime() - starttime >= 1.0f)
	//{
	//}
	//guy->GetComponent<Animation>()->PlayAnimation(&testAnim, false);
	//guy->GetComponent<Animation>()->PlayAnimation(&tippinghat, false);
	//guy->GetComponent<Animation>()->PlayAnimation(&galAnim, false);
}
